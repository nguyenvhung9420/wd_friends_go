package main

import (
    "context"
    "net/http"

    "github.com/aws/aws-lambda-go/events"
    "github.com/aws/aws-lambda-go/lambda"

    "github.com/go-chi/chi"
    chiproxy "github.com/awslabs/aws-lambda-go-api-proxy/chi"
)

var adapter *chiproxy.ChiLambda

func GetSkeleton(w http.ResponseWriter, r *http.Request) {
    ...
}

func PostSkeletonToMom(w http.ResponseWriter, r *http.Request) {
    ...
}

func init() {
    r := chi.NewRouter()

    r.Get("/skeleton/go", GetSkeleton)
    r.Post("/skeleton/go", PostSkeletonToMom)

    adapter = chiproxy.New(r)
}

func lambdaHandler(ctx context.Context, req events.APIGatewayProxyRequest) (events.APIGatewayProxyResponse, error) {
    c, err := adapter.ProxyWithContext(ctx, req)

    return c, err
}

func main() {
    lambda.Start(lambdaHandler)
}